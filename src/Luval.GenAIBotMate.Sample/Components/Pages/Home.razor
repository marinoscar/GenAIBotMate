@page "/"
@rendermode InteractiveServer

@using Luval.GenAIBotMate.Core.Services
@using Luval.GenAIBotMate.Infrastructure.Interfaces
@using Luval.GenAIBotMate.Components
@using Luval.GenAIBotMate.Sample.Presenters
@inject GenAIBotService service;
@inject IGenAIBotStorageService storageService;

<PageTitle>Home</PageTitle>

<GenAIBotMateControl @ref="Control" 
IsLoading="@homePresenter.IsLoading"
IsStreaming="@homePresenter.IsStreaming"
Messages="@homePresenter.Messages"
ChatTitle="@homePresenter.ChatTitle">

</GenAIBotMateControl>

@code {
    private GenAIBotMateControl Control { get; set; }
    private HomePresenter homePresenter;

    protected override void OnInitialized()
    {
        homePresenter = new HomePresenter(service, storageService);
        homePresenter.UpdateState += UpdateState;

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await homePresenter.InitializeAsync(Control);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private void UpdateState(object sender, EventArgs e)
    {
        StateHasChanged();
    }

}